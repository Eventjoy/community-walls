window.store={};function initialiseDB(){console.log("Initialising local database...");if(window.indexedDB||window.webkitIndexedDB||window.mozIndexedDB||window.msIndexedDB){window.store.indexedDB={};
window.store.indexedDB.db=null;window.store.open=function(){var version=5;console.log("Opening IndexedDB database...");try{var request=indexedDB.open("orders",version);
request.onupgradeneeded=function(e){var db=e.target.result;e.target.transaction.onerror=function(e){console.log(e.value);};if(db.objectStoreNames.contains("order")){db.deleteObjectStore("order");
}var store=db.createObjectStore("order",{keyPath:"ID"});store.createIndex("event_id","event_id",{unique:false});store.transaction.oncomplete=function(e){console.log("UPGRADE COMPLETED");
};};request.onsuccess=function(e){window.store.indexedDB.db=e.target.result;window.store.clear;};request.onerror=function(e){console.log(e.value);};}catch(e){alert("Open exception... "+e.message);
}};window.store.clearOrders=function(callback){console.log("Clear database");var db=window.store.indexedDB.db;try{var orderObjectStore=db.transaction("order","readwrite").objectStore("order").clear();
orderObjectStore.onsuccess=function(e){if(callback){callback(true);}};orderObjectStore.onerror=function(e){if(callback){callback(false);}console.log(e.value);
};}catch(e){console.log("Clear transaction exception... "+e.message);if(callback){callback(false,order.ID,order);}}};window.store.addOrder=function(order,callback){console.log("Add an order to database");
var db=window.store.indexedDB.db;try{var orderObjectStore=db.transaction("order","readwrite").objectStore("order").add(order);orderObjectStore.onsuccess=function(e){if(callback){callback(true,order.ID,order);
}};orderObjectStore.onerror=function(e){if(callback){callback(false,order.ID,order);}console.log(e.value);};}catch(e){console.log("Add transaction exception... "+e.message);
if(callback){callback(false,order.ID,order);}}};window.store.putOrder=function(order,callback){var db=window.store.indexedDB.db;try{var request=db.transaction("order","readwrite").objectStore("order").put({order_id:order.ID,data:order});
request.onsuccess=function(e){if(callback){callback(true,order.ID,order);}};request.onerror=function(e){if(callback){callback(false,order.ID,order);}console.log(e.value);
};}catch(e){console.log("Put transaction exception... "+e.message);if(callback){callback(false,order.ID,order);}}};window.store.getOrder=function(order_id,callback){var db=window.store.indexedDB.db;
console.log("Get Order... "+order_id);try{var request=db.transaction("order","readonly").objectStore("order").get(order_id);request.onsuccess=function(event){if(request.result){if(callback){callback(true,order_id,request.result);
}}else{if(callback){callback(false,order_id,null);}}};request.onerror=function(e){if(callback){callback(false,order_id,null);}};}catch(e){console.log("Get transaction exception... "+e.message);
if(callback){callback(false,order_id,null);}}};window.store.getAllOrders=function(callback){var db=window.store.indexedDB.db;console.log("Get Order... "+order_id);
try{var orders=[];var request=db.transaction("order","readonly").objectStore("order");var cursorRequest=request.openCursor();cursorRequest.onsuccess=function(event){var cursor=event.target.result;
if(cursor){console.log(cursor.value);}};cursorRequest.onerror=function(e){if(callback){callback(false,null);}};}catch(e){console.log("Get all orders exception... "+e.message);
if(callback){callback(false,null);}}};window.store.getFile=function(filename,userdata,callback){var db=window.store.indexedDB.db;console.log("Creating transaction... "+filename);
try{var request=db.transaction("file","readonly").objectStore("file").get(filename);request.onsuccess=function(event){if(request.result){if(callback){callback(true,filename,request.result.data,userdata);
}}else{if(callback){callback(false,filename,null,userdata);}}};request.onerror=function(e){if(callback){callback(false,filename,null,userdata);}};}catch(e){console.log("Get transaction exception... "+e.message);
if(callback){callback(false,filename,null,userdata);}}};}else{if(!!window.openDatabase){window.store.websql={};window.store.websql.db=null;window.store.open=function(){var version="1";
console.log("Opening WebSQL database...");var db=openDatabase("files",version,"file storage",5*1024*1024);if(db){window.store.websql.db=db;db.transaction(function(tx){tx.executeSql("CREATE TABLE IF NOT EXISTS file (filename TEXT PRIMARY KEY, data BLOB)",[],function(t,r){},function(t,e){console.log(e);
});});}else{}};window.store.putFile=function(filename,data,userdata,callback){var db=window.store.websql.db;try{db.transaction(function(tx){var filename2=filename;
var query='INSERT INTO file (filename, data) VALUES ("'+filename2+'", "'+data+'")';tx.executeSql(query,[],function(t,r){if(callback){callback(true,filename2,userdata);
}},function(t,e){console.log(e);if(callback){callback(false,filename2,userdata);}});});}catch(e){console.log("Transaction exception occurred");if(callback){callback(false,filename,userdata);
}}};window.store.getFile=function(filename,userdata,callback){var db=window.store.websql.db;try{db.readTransaction(function(tx){var filename2=filename;
var query='SELECT * FROM file WHERE filename = "'+filename+'"';tx.executeSql(query,[],function(t,r){if(r.rows.length>0){var len=r.rows.length,i;for(i=0;
i<len;i++){var filename=r.rows.item(i).filename;var data=r.rows.item(i).data;if(callback){callback(true,filename2,data,userdata);}break;}}else{if(callback){callback(false,filename2,null,userdata);
}}},function(t,e){console.log(e);if(callback){callback(false,filename2,null,userdata);}});},function(e){console.log("Database transaction error: "+e);if(callback){callback(false,filename,null,userdata);
}},function(){});}catch(e){console.log("Transaction exception occurred");if(callback){callback(false,filename,null,userdata);}}};window.store.deleteFile=function(filename,userdata,callback){var db=window.store.websql.db;
try{db.transaction(function(tx){var filename2=filename;var query='DELETE FROM file WHERE filename LIKE "'+filename+'"';tx.executeSql(query,[],function(t,r){if(callback){callback(true,filename2,null,userdata);
}},function(t,e){console.log(query);console.log(e);if(callback){callback(false,filename2,null,userdata);}});},function(e){console.log("Database transaction error: "+e);
if(callback){callback(false,filename,null,userdata);}},function(){});}catch(e){console.log("Transaction exception occurred");if(callback){callback(false,filename,null,userdata);
}}};}else{window.store.open=function(){console.log("No database available. Using localstorage.");};window.store.putFile=function(filename,data,userdata,callback){localStorage.setItem("file:"+filename,data);
if(callback){callback(true,filename,userdata);}};window.store.deleteFile=function(filename,userdata,callback){localStorage.removeItem("file:"+filename);
if(callback){callback(true,filename,null,userdata);}};window.store.getFile=function(filename,userdata,callback){var data=localStorage.getItem("file:"+filename);
if(data){data+="=";if(data.length%4!==0){data+=("=".substr(0,4-data.length%4));}if(callback){callback(true,filename,data,userdata);}}else{if(callback){callback(false,filename,null,userdata);
}}};}}window.store.cacheImage=function(filename,url,userdata,callback){var xmlhttp;if(window.XMLHttpRequest){xmlhttp=new XMLHttpRequest();}else{xmlhttp=new ActiveXObject("Microsoft.XMLHTTP");
}xmlhttp.onreadystatechange=function(){if(xmlhttp.readyState===4){if(xmlhttp.status===200){if(xmlhttp.responseText.length>0){var filedata="data:image/png;base64,"+xmlhttp.responseText;
if(callback){callback(true,filename,filedata,userdata);}window.store.putFile(filename,filedata,userdata,function(success,filename,userdata){});}else{console.log("window.store.cacheImage: Invalid response for image: "+url);
if(callback){callback(false,filename,null,userdata);}}}else{console.log("window.store.cacheImage: Non-successful status ("+xmlhttp.status+"): "+url);if(callback){callback(false,filename,null,userdata);
}}}};xmlhttp.onerror=function(){console.log("window.store.cacheImage: xmlhttp.onerror: "+url);if(callback){callback(false,filename,null,userdata);}};xmlhttp.open("GET","https://www.eventjoy.com/m/fetch.php?url="+encodeURIComponent(B64.encode(url)));
xmlhttp.timeout=30000;xmlhttp.ontimeout=function(){console.log("window.store.cacheImage: xmlhttp.ontimeout: "+url);if(callback){callback(false,filename,null,userdata);
}};xmlhttp.send(null);};window.store.open();}